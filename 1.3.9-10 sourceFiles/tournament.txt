--------------------------------------------------------------------------------
Section 0 - Line up
--------------------------------------------------------------------------------
Player 0 (P0): E0, Collude
        Always collude.
Player 1 (P1): E0, Betray
        Always betray.
Player 2 (P2): E2, Alternate
        Collude, then alternate.
Player 3 (P3): Mr. F, Randomness unless you backstab
        If the opponent colludes than the algorithm randomly selects c or b for 
        the next round. If the opponent backstabs, than the algorithm will alway
        s backstab back. 
--------------------------------------------------------------------------------
Section 1 - Player vs. Player
--------------------------------------------------------------------------------
Each column shows pts/round earned against each other player:
             P0     P1     P2     P3
vs. P0 :      0    100     49     44
vs. P1 :   -500      0   -375   -250
vs. P2 :   -249    -75      0   -141
vs. P3 :   -225 [;  -250   -281      0
TOTAL  :   -974   -225   -607   -347
--------------------------------------------------------------------------------
Section 2 - Leaderboard
--------------------------------------------------------------------------------
Average points per round:
Team name (P#):  Score      with strategy name
E0        (P1):        -57 points with Betray                                  
Mr. F     (P3):        -87 points with Randomness unless you backstab          
E2        (P2):       -152 points with Alternate                               
E0        (P0):       -244 points with Collude                                 
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
example0--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E0'
strategy_name = 'Collude'
strategy_description = 'Always collude.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    
    # This player always colludes.
    return 'c'
    --------------------------------------------------------------------------------
example1--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E0'
strategy_name = 'Betray'
strategy_description = 'Always betray.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    
    #This example player always betrays.      
    return 'b'
--------------------------------------------------------------------------------
example2--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'E2'
strategy_name = 'Alternate'
strategy_description = 'Collude, then alternate.'
    
def move(my_history, their_history, my_score, their_score):
    '''Make my move based on the history with this player.
    
    history: a string with one letter (c or b) per round that has been played with this opponent.
    their_history: a string of the same length as history, possibly empty. 
    The first round between these two players is my_history[0] and their_history[0]
    The most recent round is my_history[-1] and their_history[-1]
    
    Returns 'c' or 'b' for collude or betray.
    '''
    # This player colludes on even numbered rounds (first round is round #0).
    if len(my_history)%2 == 0:
        return 'c'
    else:
        return 'b'
    --------------------------------------------------------------------------------
teamflan--------------------------------------------------------------------------------
####
# Each team's file must define four tokens:
#     team_name: a string
#     strategy_name: a string
#     strategy_description: a string
#     move: A function that returns 'c' or 'b'
####

team_name = 'Mr. F' # Only 10 chars displayed.
strategy_name = 'Randomness unless you backstab'
strategy_description = 'If the opponent colludes than the algorithm randomly selects c or b for the next round. If the opponent backstabs, than the algorithm will always backstab back. '

import random

def move(my_history, their_history, my_score, their_score):
    ''' Arguments accepted: my_history, their_history are strings.
    my_score, their_score are ints.
    
    Make my move.
    Returns 'c' or 'b'. 
    '''

    # my_history: a string with one letter (c or b) per round that has been played with this opponent.
    # their_history: a string of the same length as history, possibly empty. 
    # The first round between these two players is my_history[0] and their_history[0].
    # The most recent round is my_history[-1] and their_history[-1].
    
    # Analyze my_history and their_history and/or my_score and their_score.
    # Decide whether to return 'c' or 'b'.
    if len(my_history) == 0:
        return random.choice(['c','b'])
    elif their_history[-1] == 'b':
        return 'b'
    else:
        return random.choice(['c','b'])

    
def test_move(my_history, their_history, my_score, their_score, result):
    '''calls move(my_history, their_history, my_score, their_score)
    from this module. Prints error if return value != result.
    Returns True or False, dpending on whether result was as expected.
    '''
    real_result = move(my_history, their_history, my_score, their_score)
    if real_result == result:
        return True
    else:
        print("move(" +
            ", ".join(["'"+my_history+"'", "'"+their_history+"'",
                       str(my_score), str(their_score)])+
            ") returned " + "'" + real_result + "'" +
            " and should have returned '" + result + "'")
        return False

if __name__ == '__main__':
     
    # Test 1: Betray on first move.
    if test_move(my_history='',
              their_history='', 
              my_score=0,
              their_score=0,
              result='b'):
         print 'Test passed'
     # Test 2: Continue betraying if they collude despite being betrayed.
    test_move(my_history='bbb',
              their_history='ccc', 
              # Note the scores are for testing move().
              # The history and scores don't need to match unless
              # that is relevant to the test of move(). Here,
              # the simulation (if working correctly) would have awarded 
              # 300 to me and -750 to them. This test will pass if and only if
              # move('bbb', 'ccc', 0, 0) returns 'b'.
              my_score=0, 
              their_score=0,
              result='b')             --------------------------------------------------------------------------------
Section 3 - Game Data for Team E0
--------------------------------------------------------------------------------
-500 pt/round: E0(P0) "Collude"
100 pt/round: E0(P1) "Betray"
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB

cccccccc
BBBBBBBB

--------------------------------------------------------------------------------
-249 pt/round: E0(P0) "Collude"
49 pt/round: E2(P2) "Alternate"
CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCc
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB

CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCc
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB

CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcC
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC

--------------------------------------------------------------------------------
-225 pt/round: E0(P0) "Collude"
44 pt/round: Mr. F(P3) "Randomness unless you backstab"
CCCCcCCCcccCcCcCCcCCcCccCccCcCCCcCCCCCCccCCccCcCCCCcCCCcCcCcCcCCcCccCCcCcCcCcccc
CCCCBCCCBBBCBCBCCBCCBCBBCBBCBCCCBCCCCCCBBCCBBCBCCCCBCCCBCBCBCBCCBCBBCCBCBCBCBBBB

ccCCcCccCCccccCcCcCccccCcCCcCCcCCcCcCCccCCccCcCCCcCccCCCCC
BBCCBCBBCCBBBBCBCBCBBBBCBCCBCCBCCBCBCCBBCCBBCBCCCBCBBCCCCC

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E0
--------------------------------------------------------------------------------
100 pt/round: E0(P1) "Betray"
-500 pt/round: E0(P0) "Collude"
BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

BBBBBBBB
cccccccc

--------------------------------------------------------------------------------
-75 pt/round: E0(P1) "Betray"
-375 pt/round: E2(P2) "Alternate"
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb

--------------------------------------------------------------------------------
-250 pt/round: E0(P1) "Betray"
-250 pt/round: Mr. F(P3) "Randomness unless you backstab"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team E2
--------------------------------------------------------------------------------
49 pt/round: E2(P2) "Alternate"
-249 pt/round: E0(P0) "Collude"
CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB
CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCc

CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCB
CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCc

CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC
CcCcCcCcCcCcCcCcCcCcCcCcCcCcCcCcC

--------------------------------------------------------------------------------
-375 pt/round: E2(P2) "Alternate"
-75 pt/round: E0(P1) "Betray"
cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

cbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb
BbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBbBb

--------------------------------------------------------------------------------
-281 pt/round: E2(P2) "Alternate"
-141 pt/round: Mr. F(P3) "Randomness unless you backstab"
CBcBcBcBcBcBcBcbcbcbcBcBcbcbcbcBcbcbcbcbcBcBcBcBcBcBcBcbcbcbcBcBcbcBcbcBcBcBcBcB
CcBcBcBcBcBcBcBbBbBbBcBcBbBbBbBcBbBbBbBbBcBcBcBcBcBcBcBbBbBbBcBcBbBcBbBcBcBcBcBc

cbcbcbcbcBcBcbcbcbcBcbcBcBcBcbcBcbcbcBcbcbcBcBcBcBcBcBcbcBcBcBcbcbcBcbcbcbcbcbcb
BbBbBbBbBcBcBbBbBbBcBbBcBcBcBbBcBbBbBcBbBbBcBcBcBcBcBcBbBcBcBcBbBbBcBbBbBbBbBbBb

cBcbcbcbcbcbcBcBcbcB
BcBbBbBbBbBbBcBcBbBc

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Section 3 - Game Data for Team Mr. F
--------------------------------------------------------------------------------
44 pt/round: Mr. F(P3) "Randomness unless you backstab"
-225 pt/round: E0(P0) "Collude"
CCCCBCCCBBBCBCBCCBCCBCBBCBBCBCCCBCCCCCCBBCCBBCBCCCCBCCCBCBCBCBCCBCBBCCBCBCBCBBBB
CCCCcCCCcccCcCcCCcCCcCccCccCcCCCcCCCCCCccCCccCcCCCCcCCCcCcCcCcCCcCccCCcCcCcCcccc

BBCCBCBBCCBBBBCBCBCBBBBCBCCBCCBCCBCBCCBBCCBBCBCCCBCBBCCCCC
ccCCcCccCCccccCcCcCccccCcCCcCCcCCcCcCCccCCccCcCCCcCccCCCCC

--------------------------------------------------------------------------------
-250 pt/round: Mr. F(P3) "Randomness unless you backstab"
-250 pt/round: E0(P1) "Betray"
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

bbbbbbbbbbbbbbbbbbbb
bbbbbbbbbbbbbbbbbbbb

--------------------------------------------------------------------------------
-141 pt/round: Mr. F(P3) "Randomness unless you backstab"
-281 pt/round: E2(P2) "Alternate"
CcBcBcBcBcBcBcBbBbBbBcBcBbBbBbBcBbBbBbBbBcBcBcBcBcBcBcBbBbBbBcBcBbBcBbBcBcBcBcBc
CBcBcBcBcBcBcBcbcbcbcBcBcbcbcbcBcbcbcbcbcBcBcBcBcBcBcBcbcbcbcBcBcbcBcbcBcBcBcBcB

BbBbBbBbBcBcBbBbBbBcBbBcBcBcBbBcBbBbBcBbBbBcBcBcBcBcBcBbBcBcBcBbBbBcBbBbBbBbBbBb
cbcbcbcbcBcBcbcbcbcBcbcBcBcBcbcBcbcbcBcbcbcBcBcBcBcBcBcbcBcBcBcbcbcBcbcbcbcbcbcb

BcBbBbBbBbBbBcBcBbBc
cBcbcbcbcbcbcBcBcbcB

--------------------------------------------------------------------------------
